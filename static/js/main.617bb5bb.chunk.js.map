{"version":3,"sources":["components/InputArea.jsx","components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["InputArea","props","React","createElement","className","onChange","type","value","task","onClick","onAdd","disabled","disableAdd","style","opacity","cursor","ToDoItem","_ref","id","text","done","onToggle","onDelete","onEdit","isEditing","setEditing","useState","editText","setEditText","handleEditSave","display","alignItems","justifyContent","e","target","onKeyDown","key","role","aria-label","App","setTask","taskList","setList","deleteItem","prev","filter","_","index","toggleDone","map","item","_objectSpread","editItem","newText","useEffect","stored","localStorage","getItem","JSON","parse","setItem","stringify","isDuplicate","some","taskObj","trim","toast","setToast","marginBottom","marginTop","inputText","setTimeout","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.617bb5bb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  return (\r\n    <div className=\"form\">\r\n      <input onChange={props.onChange} type=\"text\" value={props.task} />\r\n      <button\r\n        onClick={() => props.onAdd(props.task)}\r\n        disabled={props.disableAdd}\r\n        style={{ opacity: props.disableAdd ? 0.5 : 1, cursor: props.disableAdd ? \"not-allowed\" : \"pointer\" }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem({ id, text, done, onToggle, onDelete, onEdit }) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [editText, setEditText] = useState(text);\r\n\r\n  function handleEditSave() {\r\n    onEdit(id, editText);\r\n    setEditing(false);\r\n  }\r\n\r\n  return (\r\n    <li\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <span className={done ? \"done\" : \"\"} onClick={() => onToggle(id)}>\r\n        {isEditing ? (\r\n          <input\r\n            value={editText}\r\n            onChange={(e) => setEditText(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleEditSave()}\r\n          />\r\n        ) : (\r\n          text\r\n        )}\r\n      </span>\r\n\r\n      <div className=\"action-buttons\">\r\n        {isEditing ? (\r\n          <button onClick={handleEditSave} className=\"text-button\">\r\n            <span>Save</span>\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => setEditing(true)} className=\"edit-button\">\r\n            <span role=\"img\" aria-label=\"edit\">\r\n              üñäÔ∏è\r\n            </span>\r\n          </button>\r\n        )}\r\n\r\n        <button onClick={() => onDelete(id)}>\r\n          <span role=\"img\" aria-label=\"delete\">\r\n            ‚ùå\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputArea from \"./InputArea\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nfunction App() {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskList, setList] = useState([]);\r\n\r\n  // Load from localStorage\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"tasks\");\r\n    if (stored) {\r\n      setList(JSON.parse(stored));\r\n    }\r\n  }, []);\r\n\r\n  // Save to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(taskList));\r\n  }, [taskList]);\r\n\r\n  function handleChange(event) {\r\n    setTask(event.target.value);\r\n  }\r\n\r\n  function handleClick(inputText) {\r\n    if (inputText.trim() === \"\") return;\r\n\r\n    const isDuplicate = taskList.some((taskObj) => taskObj.text === inputText);\r\n    if (isDuplicate) {\r\n      showToast(\"Task already exists!\");\r\n      return;\r\n    }\r\n\r\n    setList((prev) => [...prev, { text: inputText, done: false }]);\r\n    setTask(\"\");\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setList((prev) => prev.filter((_, index) => index !== id));\r\n  }\r\n\r\n  function toggleDone(id) {\r\n    setList((prev) =>\r\n      prev.map((item, index) =>\r\n        index === id ? { ...item, done: !item.done } : item\r\n      )\r\n    );\r\n  }\r\n\r\n  function editItem(id, newText) {\r\n    setList((prev) =>\r\n      prev.map((item, index) =>\r\n        index === id ? { ...item, text: newText } : item\r\n      )\r\n    );\r\n  }\r\n\r\n  function clearAll() {\r\n    setList([]);\r\n  }\r\n\r\n  const isDuplicate = taskList.some((taskObj) => taskObj.text === task);\r\n  const disableAdd = task.trim() === \"\" || isDuplicate;\r\n\r\n  const [toast, setToast] = useState(\"\");\r\n\r\n  function showToast(msg) {\r\n    setToast(msg);\r\n    setTimeout(() => setToast(\"\"), 3000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {toast && <div className=\"toast\">{toast}</div>}\r\n      <div className=\"container\">\r\n        <div className=\"heading\">\r\n          <h1>To-Do List</h1>\r\n        </div>\r\n        <div className=\"clear-all-container\">\r\n          <button\r\n            onClick={clearAll}\r\n            style={{\r\n              marginBottom: \"30px\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            <span>Clear All</span>\r\n          </button>\r\n        </div>\r\n\r\n        <InputArea\r\n          onAdd={handleClick}\r\n          task={task}\r\n          onChange={handleChange}\r\n          disableAdd={disableAdd}\r\n        />\r\n\r\n        <ul>\r\n          {taskList.map((item, index) => (\r\n            <ToDoItem\r\n              key={index}\r\n              id={index}\r\n              text={item.text}\r\n              done={item.done}\r\n              onToggle={toggleDone}\r\n              onDelete={deleteItem}\r\n              onEdit={editItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}